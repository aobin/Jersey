<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- spring mvc 的注解配置 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<task:annotation-driven/>
	<mvc:default-servlet-handler />
	<context:component-scan base-package="com.aobin.maven"></context:component-scan>
	<context:annotation-config></context:annotation-config>

	<import resource="classpath:memcache/memcache-beans.xml" />


	<!-- 加载DB的配置文件 -->
	<context:property-placeholder location="classpath:db.properties"
		ignore-unresolvable="true" />

	<!-- 添加视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 数据源，使用dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>


	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />

	</bean>

	<!-- 原始dao接口 -->

	<!-- <bean id="userDao" class="cn.itcast.ssm.dao.UserDaoImpl"> <property 
		name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean> -->

	<!-- mapper配置 MapperFactoryBean：根据mapper接口生成代理对象 -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		mapperInterface指定mapper接口 <property name="mapperInterface" value="cn.itcast.ssm.mapper.UserMapper"/> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean> -->
	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册 遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录 
		中 自动扫描出来的mapper的bean的id为mapper类名（首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名 如果扫描多个包，每个包中间使用半角逗号分隔 -->
		<property name="basePackage" value="com.aobin.maven.springmvc.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



	<!-- transaction manager 事务控制的配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置springMVC的相关的东西 -->

	<!-- 手动配置 handlerAdapter 和 handlerMapping -->
	<!-- <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean> 
		<bean name="/queryItems.action" class="com.aobin.maven.springmvc.controller.ItemController"></bean> 
		<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean> -->

	<!-- 配置定时任务 -->
	<!-- <task:scheduler id="myScheduler" pool-size="10" />
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="taskManager" method="printInfo"
            fixed-delay="1000" />
    </task:scheduled-tasks> -->

</beans>


